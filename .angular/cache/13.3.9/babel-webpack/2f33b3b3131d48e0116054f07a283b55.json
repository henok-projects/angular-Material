{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { GlobalConstant } from '../shared/global-constant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../service/user.service\";\nimport * as i4 from \"../service/snackbar.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"ngx-ui-loader\";\nimport * as i7 from \"@angular/material/toolbar\";\nimport * as i8 from \"@angular/flex-layout/flex\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/button\";\n\nfunction ForgotPasswordComponent_mat_error_11_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ForgotPasswordComponent_mat_error_11_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ForgotPasswordComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ForgotPasswordComponent_mat_error_11_span_1_Template, 2, 0, \"span\", 8);\n    i0.ɵɵtemplate(2, ForgotPasswordComponent_mat_error_11_span_2_Template, 2, 0, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.forgotPasswordForm.controls.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.forgotPasswordForm.controls.email.errors.pattern);\n  }\n}\n\nexport let ForgotPasswordComponent = /*#__PURE__*/(() => {\n  class ForgotPasswordComponent {\n    constructor(formBuilder, router, userService, snackbarService, dialogRef, ngxService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.userService = userService;\n      this.snackbarService = snackbarService;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.forgotPasswordForm = FormGroup;\n    }\n\n    ngOnInit() {\n      this.forgotPasswordForm = this.formBuilder.group({\n        email: [null, [Validators.required, Validators.pattern(GlobalConstant.emailRege)]]\n      });\n    }\n\n    handleSubmit() {\n      this.ngxService.start;\n      var formData = this.forgotPasswordForm.value;\n      var data = {\n        email: formData.email\n      };\n      this.userService.forgotPassword(data).subscribe(response => {\n        this.ngxService.stop();\n        this.dialogRef.close();\n        this.responseMessage = response.message;\n        this.snackbarService.openSnackBar(this.responseMessage, \"\");\n        this.router.navigate(['/']);\n      }, error => {\n        var _a;\n\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = error.error.message;\n        } else {\n          this.responseMessage = GlobalConstant.generateError;\n        }\n\n        this.snackbarService.openSnackBar(this.responseMessage, GlobalConstant.error);\n      });\n    }\n\n  }\n\n  ForgotPasswordComponent.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.SnackbarService), i0.ɵɵdirectiveInject(i5.MatDialogRef), i0.ɵɵdirectiveInject(i6.NgxUiLoaderService));\n  };\n\n  ForgotPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"app-forgot-password\"]],\n    decls: 17,\n    vars: 3,\n    consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"title-center\"], [1, \"mat-typography\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"appearance\", \"fill\", \"fxFlex\", \"\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [4, \"ngIf\"], [\"align\", \"center\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"mat-dialog-close\", \"\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0);\n        i0.ɵɵelementStart(1, \"mat-toolbar-row\", 1);\n        i0.ɵɵelementStart(2, \"span\", 2);\n        i0.ɵɵtext(3, \"Forgot Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-dialog-content\", 3);\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵtemplate(11, ForgotPasswordComponent_mat_error_11_Template, 3, 2, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-dialog-actions\", 9);\n        i0.ɵɵelementStart(13, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function ForgotPasswordComponent_Template_button_click_13_listener() {\n          return ctx.handleSubmit();\n        });\n        i0.ɵɵtext(14, \"Signup\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 11);\n        i0.ɵɵtext(16, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.forgotPasswordForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotPasswordForm.controls.email.touched && ctx.signupForm.controls.email.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !(ctx.forgotPasswordForm.valid && ctx.forgotPasswordForm.dirty));\n      }\n    },\n    directives: [i7.MatToolbar, i7.MatToolbarRow, i8.DefaultLayoutDirective, i5.MatDialogContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i8.DefaultFlexDirective, i9.MatFormField, i9.MatLabel, i10.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i11.NgIf, i9.MatError, i5.MatDialogActions, i12.MatButton, i5.MatDialogClose],\n    styles: [\"\"]\n  });\n  return ForgotPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}